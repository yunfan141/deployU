{"version":3,"sources":["webpack:///./src/app/admin/input-question/input-question.component.css","webpack:///./src/app/admin/input-question/input-question.component.html","webpack:///./src/app/admin/input-question/input-question.component.ts","webpack:///./src/app/admin/input-question/input-question.module.ts","webpack:///./src/app/layout/workspace/footer/footer.component.css","webpack:///./src/app/layout/workspace/footer/footer.component.html","webpack:///./src/app/layout/workspace/footer/footer.component.ts","webpack:///./src/app/layout/workspace/footer/footer.module.ts"],"names":[],"mappings":"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","file":"input-question-input-question-module.js","sourcesContent":["module.exports = \".card-title {\\n  margin-top: 10px;\\n  margin-left: 10px;\\n  font-size: 20px;\\n}\\n\\n\\n.btn .btn-link .nav-link {\\n  font-size: 16px;\\n}\\n\\n\\n.main-container {\\n  height: 100%;\\n}\\n\\n\\n.card {\\n  width: 1130px;\\n  height: 580px;\\n}\\n\\n\\n.row {\\n  padding-left: 11px;\\n}\\n\\n\\n.card-block {\\n  height: 85%;\\n  overflow: auto;\\n  margin-bottom: 10px;\\n}\\n\\n\\n.card-text {\\n  overflow: auto;\\n}\\n\\n\\n.card-footer {\\n  position: absolute;\\n  bottom: 10px;\\n}\\n\\n\\n.form {\\n  width: 95%;\\n  overflow: auto;\\n}\\n\\n\\n.form-block {\\n  width: 95%;\\n}\\n\\n\\n.ansGroup {\\n  width: 98%;\\n  overflow: auto;\\n}\\n\\n\\n.question-info {\\n  margin-left: 15px;\\n  width: 90%;\\n}\\n\\n\\n.ques-info {\\n  padding-bottom: 10px;\\n}\\n\\n\\np {\\n  margin-top: 5px;\\n}\\n\\n\\n.confirmation {\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  color: #002538;\\n}\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"row\\\">\\n    <app-admin-card></app-admin-card>\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-xs-12\\\">\\n      <!-- input question part -->\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-title\\\">\\n          <clr-icon shape=\\\"add-text\\\" size=\\\"36\\\"></clr-icon> &nbsp;\\n          <span>Input New Question</span>\\n        </div>\\n        <div class=\\\"card-divider\\\"></div>\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"card-text\\\">\\n            <clr-tabs>\\n              <clr-tab>\\n                <button clrTabLink>Input Section</button>\\n                <ng-template [(clrIfActive)]=\\\"inputActive\\\">\\n                  <clr-tab-content>\\n                    <!--begin of the input question -->\\n                    <form class=\\\"form\\\" [formGroup]=\\\"form\\\">\\n\\n                      <section class=\\\"form-block\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                        <!--select question type-->\\n\\n                        <div class=\\\"form-group\\\">\\n                          <label> Question Category </label>\\n                          <!--<div class=\\\"radio-inline\\\">-->\\n                            <!--<input type=\\\"radio\\\" name=\\\"quesType\\\" id=\\\"t1\\\" value=\\\"demographic\\\" formControlName=\\\"quesType\\\">-->\\n                            <!--<label for=\\\"t1\\\">Demographic</label>-->\\n                          <!--</div>-->\\n                          <div class=\\\"radio-inline\\\">\\n                            <input type=\\\"radio\\\" name=\\\"quesType\\\" id=\\\"t2\\\" value=\\\"questionnaire\\\" formControlName=\\\"quesType\\\">\\n                            <label for=\\\"t2\\\">Questionnaire</label>\\n                          </div>\\n                        </div>\\n                        <!--Input question description-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"desp\\\">Description</label>\\n                          <input id=\\\"desp\\\" type=\\\"text\\\" formControlName=\\\"desp\\\" size=\\\"55\\\">\\n                        </div>\\n                        <!--if question belongs to questionnaire, then select domain-->\\n                        <div class=\\\"row\\\">\\n                        <div *ngIf=\\\"isQues\\\">\\n                          <!-- Choose domain-->\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"domain\\\">Domain</label>\\n                            <div class=\\\"select\\\">\\n                              <select id=\\\"domain\\\" name=\\\"domain\\\" formControlName=\\\"domain\\\">\\n                                <option value=\\\"Default\\\">Select Question Domain...</option>\\n                                <option *ngFor=\\\"let dom of domains\\\" [value]=\\\"dom.domain\\\">{{dom.domain}}</option>\\n                              </select>\\n                            </div>\\n                          </div>\\n\\n                          <!--Choose question weight-->\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"weight\\\">Weight</label>\\n                            <input id=\\\"weight\\\" type=\\\"number\\\" formControlName=\\\"weight\\\" size=\\\"45\\\">\\n                          </div>\\n                        </div>\\n                        </div>\\n                        <!-- end of ngIf-->\\n\\n                        <!-- Choose question order-->\\n                        <div class=\\\"row\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"order\\\">Order</label>\\n                          <input id=\\\"order\\\" type=\\\"number\\\" formControlName=\\\"order\\\" size=\\\"45\\\">\\n                        </div>\\n                        <!-- Choose answer type-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"type\\\">Answer Type</label>\\n                          <div class=\\\"select\\\">\\n                            <select id=\\\"ansType\\\" name=\\\"anstype\\\" formControlName=\\\"anstype\\\">\\n                              <option value=\\\"Default\\\">Select Answer Type...</option>\\n                              <option *ngFor=\\\"let ans of AnsType\\\" [value]=\\\"ans.key\\\">{{ans.value}}</option>\\n                            </select>\\n                          </div>\\n                        </div>\\n                        <!-- Choose answer numbers-->\\n                        <div *ngIf=\\\"isText; else notText\\\">\\n                          <div class=\\\"form-group\\\" >\\n                            <label for=\\\"optNum\\\">Answer Number</label>\\n                            <input id=\\\"optNum\\\" type=\\\"number\\\" value=\\\"0\\\" size=\\\"45\\\" disabled>\\n                          </div>\\n                        </div>\\n                        <ng-template #notText>\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"optNum\\\">Answer Number</label>\\n                            <input id=\\\"optNum\\\" type=\\\"number\\\" formControlName=\\\"optnum\\\" size=\\\"45\\\">\\n                          </div>\\n                        </ng-template>\\n                        </div>\\n\\n                        <!--if question not text input, generate answer group -->\\n                        <div *ngIf=\\\"needOptions\\\">\\n                          <form class=\\\"form\\\" [formGroup]=\\\"ansForm\\\">\\n                            <div class=\\\"form-group row ansGroup\\\" *ngFor=\\\"let opt of options\\\">\\n                              <div class=\\\"col-lg-2 col-md-12 col-sm-12 col-xs-12\\\">\\n                                <label for=\\\"gForm_1\\\">Answer Options {{ opt.key + 1 }}</label>\\n                              </div>\\n                              <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-xs-12\\\">\\n                                <input class=\\\"form-control\\\" type=\\\"number\\\" id=\\\"gForm_1\\\" placeholder=\\\"Enter Answer Extent\\\"\\n                                       size=\\\"35\\\" [formControlName]=\\\"opt.eid\\\">\\n                              </div>\\n                              <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-xs-12\\\">\\n                                <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"gForm_2\\\"\\n                                       placeholder=\\\"Enter Answer Description\\\" size=\\\"55\\\" [formControlName]=\\\"opt.key\\\">\\n                              </div>\\n                            </div>\\n                          </form>\\n                        </div>\\n\\n                      </section>\\n                      <div class=\\\"card-footer\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"confirm()\\\">Next</button>\\n                      </div>\\n\\n                    </form>\\n                    <!--end of the input question-->\\n                  </clr-tab-content>\\n                </ng-template>\\n              </clr-tab>\\n\\n              <clr-tab>\\n                <button clrTabLink>Confirm Question</button>\\n                <ng-template [(clrIfActive)]=\\\"confirmActive\\\">\\n                  <clr-tab-content>\\n                    <!--begin of the confirm question -->\\n                    <div class=\\\"question-info\\\">\\n                      <!--question category -->\\n                      <div class=\\\"ques-info\\\">\\n                        <h6>Question Category: <span class=\\\"confirmation\\\"> Questionnaire</span></h6>\\n                      </div>\\n\\n                      <!--question description -->\\n                      <div class=\\\"ques-info\\\">\\n                        <h6>Question Description:\\n                          <span class=\\\"confirmation\\\"> {{form.get('desp').value}}</span></h6>\\n                      </div>\\n\\n                      <!--question order-->\\n                      <div class=\\\"ques-info\\\">\\n                        <h6>Question Order:\\n                          <span class=\\\"confirmation\\\"> {{form.get('order').value}}</span></h6>\\n                      </div>\\n\\n                      <!-- question answer type-->\\n                      <div class=\\\"ques-info\\\">\\n                        <h6>Question Answer Type:\\n                          <span class=\\\"confirmation\\\"> {{form.get('anstype').value}}</span> </h6>\\n                      </div>\\n\\n                      <!--question domain and weight if needed -->\\n                      <div *ngIf=\\\"isQues\\\">\\n                        <!--domain -->\\n                        <div class=\\\"ques-info\\\">\\n                          <h6>Question Domain:\\n                            <span class=\\\"confirmation\\\"> {{form.get('domain').value}}</span> </h6>\\n                        </div>\\n\\n                        <!--weight -->\\n                        <div class=\\\"ques-info\\\">\\n                          <h6>Question Weight:\\n                            <span class=\\\"confirmation\\\"> {{form.get('weight').value}}</span> </h6>\\n                        </div>\\n                      </div>\\n\\n                      <!-- answer options if needed -->\\n                      <div *ngFor=\\\"let opt of options\\\">\\n                        <div class=\\\"ques-info row\\\">\\n                          <h6>Answer Options: {{opt.key + 1}}\\n                            <span class=\\\"confirmation\\\">Description: {{ opt.value }}</span>\\n                            <span class=\\\"confirmation\\\">Weight: {{ opt.extent }}</span>\\n                          </h6>\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                    <!--end of question information -->\\n\\n                    <div class=\\\"card-footer\\\" *ngIf=\\\"form.valid && ansForm.valid; else block\\\">\\n                      <button class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">Submit</button>\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"back()\\\">Back</button>\\n                    </div>\\n                    <ng-template #block>\\n                      <button class=\\\"btn btn-primary\\\" disabled>Submit</button>\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"back()\\\">Back</button>\\n                    </ng-template>\\n\\n                    <!-- end of the input question-->\\n                  </clr-tab-content>\\n                </ng-template>\\n              </clr-tab>\\n\\n            </clr-tabs>\\n\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ANSTYPE, DOMAIN, DomQuestion, Options, Question, Questionnaire, TYPE} from '../../mock-data/Question';\nimport {debounceTime} from \"rxjs/operators\";\nimport {QuestionService} from '../../service/question.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-input-question',\n  templateUrl: './input-question.component.html',\n  styleUrls: ['./input-question.component.css']\n})\nexport class InputQuestionComponent implements OnInit {\n  form: FormGroup;\n  ansForm: FormGroup;\n\n  inputActive: boolean = true;\n  confirmActive: boolean = false;\n\n  question: DomQuestion;\n\n  type = TYPE;\n  Domain = DOMAIN;\n  domains = [];\n  AnsType = ANSTYPE;\n\n  options: Options[] = [];\n  isQues: boolean = false;\n  isText: boolean = false;\n  needOptions: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private questionService: QuestionService\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n\n  buildForm() {\n    this.getDomains();\n    this.form = this.fb.group({\n      quesType: ['questionnaire', [Validators.required]],\n      desp: ['', [Validators.required, Validators.minLength(4)]],\n      domain: ['', [Validators.required]],\n      weight: ['', [Validators.required]],\n      order: ['', [Validators.required]],\n      anstype: ['', [Validators.required]],\n      optnum: ['', [Validators.required]],\n    });\n\n    this.ansForm = this.fb.group({});\n\n    if (this.form.controls['quesType'].value === 'questionnaire') {\n      this.getType('questionnaire');\n    } else {\n      this.form.controls[\"quesType\"].valueChanges.subscribe((value) => {\n        this.getType(value);\n      });\n    }\n    this.form.controls[\"anstype\"].valueChanges.subscribe((value)=> {\n      this.getAnsType(value);\n    });\n    this.form.controls[\"optnum\"].valueChanges.subscribe((value)=> {\n      this.getAnsNumber(value);\n    })\n  }\n\n  getDomains() {\n    this.questionService.getAllDomains().subscribe(value => {\n      this.domains = value;\n    })\n  }\n\n\n  getType(value: string) {\n    if(value === \"questionnaire\") {\n     this.isQues = true;\n    }\n  }\n\n  getAnsType(value: string) {\n    if (value === \"textbox\") {\n      this.isText= true;\n    } else {\n      this.needOptions = true;\n    }\n  }\n\n  getAnsNumber(optnum: number) {\n    let id = 0;\n    this.options = [];\n    while (optnum > 0 && id < optnum) {\n      let opt = {key: id, eid: 'A' + id, extent: id, value: ''};\n      this.options.push(opt);\n      id++;\n    }\n\n    let group: any = {};\n    this.options.forEach(option => {\n      group[option.eid] = ['', Validators.required]\n      group[option.key] = [option.value, Validators.required]\n    });\n    this.ansForm = this.fb.group(group);\n\n    for (let opt of this.options) {\n      this.ansForm.controls[opt.eid].valueChanges.subscribe(value => opt.extent = value);\n      this.ansForm.controls[opt.key].valueChanges.subscribe(value => opt.value = value);\n    }\n  }\n\n  confirm() {\n    this.inputActive = false;\n    this.confirmActive = true;\n  }\n\n  back() {\n    this.inputActive = true;\n    this.confirmActive = false;\n  }\n\n  submit() {\n    const newQuestion = new Questionnaire({\n      key: 'Q' + this.form.controls['order'].value,\n      label: this.form.controls['desp'].value,\n      type: this.form.controls['anstype'].value,\n      order: this.form.controls['order'].value,\n      domain: this.form.controls['domain'].value,\n      weight: this.form.controls['weight'].value,\n      ansOptions: this.options,\n    });\n    this.questionService.addQuestion(newQuestion).subscribe(value => {\n      this.router.navigateByUrl('/adminDashboard/ques-manage');\n    });\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputQuestionComponent } from './input-question.component';\nimport {ClarityModule} from '@clr/angular';\nimport {RouterModule} from '@angular/router';\nimport {AdminCardModule} from '../admin-card/admin-card.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    AdminCardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      {path: '', component: InputQuestionComponent}\n    ])\n  ],\n  declarations: [InputQuestionComponent],\n  exports: [\n    ClarityModule,\n    RouterModule,\n    AdminCardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InputQuestionComponent\n  ]\n})\nexport class InputQuestionModule { }\n","module.exports = \".copy-right {\\n  font-size: 11px;\\n  margin-top: 1px;\\n}\\n\\n.company {\\n  font-size: 12px;\\n  color: #002538;\\n}\\n\\n.footer {\\n  margin-left: 16px;\\n  bottom: 18px;\\n  height: 80px;\\n  width: 200px;\\n  position: absolute;\\n}\\n\"","module.exports = \"<div class=\\\"footer\\\">\\n  <p class=\\\"copy-right\\\">Pitt Wellness Scale System</p>\\n  <p class=\\\"copy-right\\\">@{{today | date: 'yyyy'}}<b class=\\\"company\\\">&nbsp; University of Pittsburgh.</b></p>\\n  <p class=\\\"copy-right\\\">All rights reserved.</p>\\n  <p class=\\\"copy-right\\\"><b>Version: </b> 0.0.1 </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  today = Date.now();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FooterComponent } from './footer.component';\nimport {ClarityModule} from '@clr/angular';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule\n  ],\n  declarations: [FooterComponent],\n  exports: [\n    ClarityModule,\n    FooterComponent\n  ]\n})\nexport class FooterModule { }\n"],"sourceRoot":""}