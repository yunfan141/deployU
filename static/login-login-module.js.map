{"version":3,"sources":["webpack:///./src/app/login/forget-psd/forget-psd.component.css","webpack:///./src/app/login/forget-psd/forget-psd.component.html","webpack:///./src/app/login/forget-psd/forget-psd.component.ts","webpack:///./src/app/login/forget-psd/forget-psd.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<clr-modal [(clrModalOpen)]=\\\"basic\\\" [clrModalSize]=\\\"'lg'\\\">\\n  <h3 class=\\\"modal-title\\\">Please input your security questions and answers</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form [formGroup]=\\\"form3\\\">\\n      <section class=\\\"form-block\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"empUserName\\\">User name</label>\\n          <label for=\\\"empUserName\\\"\\n                 aria-haspopup=\\\"true\\\"\\n                 role=\\\"tooltip\\\"\\n                 class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n            <input type=\\\"text\\\" id=\\\"empUserName\\\" placeholder=\\\"Enter User name\\\"\\n                   name=\\\"username\\\" formControlName=\\\"username\\\" size=\\\"38\\\">\\n            <span class=\\\"tooltip-content\\\"> User Name is Required. </span>\\n          </label>\\n        </div>\\n        <div *ngFor=\\\"let t of time\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>{{t.id}} .Security Question</label>\\n            <div class=\\\"select\\\">\\n              <select name=\\\"secq1\\\"\\n                      [(ngModel)]=\\\"t.question\\\" [formControlName]=\\\"t.qid\\\" required>\\n                <option *ngFor=\\\"let ques of secureQue\\\" [value]=\\\"ques.value\\\">{{ques.value}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>&nbsp; &nbsp; Security Answer</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"t.answer\\\" [formControlName]=\\\"t.aid\\\" placeholder=\\\"Enter Answer\\\" size=\\\"38\\\">\\n          </div>\\n        </div>\\n      </section>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"basic = false\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"basic = false\\\">Submit</button>\\n  </div>\\n</clr-modal>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {SecurityQues} from '../../mock-data/userInfo';\n\n@Component({\n  selector: 'app-forget-psd',\n  templateUrl: './forget-psd.component.html',\n  styleUrls: ['./forget-psd.component.css']\n})\nexport class ForgetPsdComponent implements OnInit {\n  @Input() basic: boolean;\n\n  form3: FormGroup;\n  secureQue = SecurityQues;\n  time = [\n    {id: 1, qid: 'Q1', aid: 'A1', question: '', answer: ''},\n    {id: 2, qid: 'Q2', aid: 'A2', question: '', answer: ''},\n    {id: 3, qid: 'Q3', aid: 'A3', question: '', answer: ''},\n  ];\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.form3 = this.fb.group({\n      username: ['', [Validators.required]],\n      Q1: ['', [Validators.required]],\n      Q2: ['', [Validators.required]],\n      Q3: ['', [Validators.required]],\n      A1: ['', [Validators.required]],\n      A2: ['', [Validators.required]],\n      A3: ['', [Validators.required]],\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ForgetPsdComponent } from './forget-psd.component';\nimport {ClarityModule} from '@clr/angular';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [ForgetPsdComponent],\n  exports: [\n    ClarityModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ForgetPsdComponent\n  ]\n})\nexport class ForgetPsdModule { }\n","module.exports = \".special-letter {\\n  color: cadetblue;\\n  font-size: 36px;\\n}\\n\\n\\n.confirm-info {\\n  font-size: 16px;\\n  color: #002538;\\n  margin-left: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"login-wrapper\\\">\\n  <form class=\\\"login\\\" [formGroup]=\\\"loginForm\\\">\\n    <label class=\\\"title\\\">\\n      <h3 class=\\\"welcome\\\">Welcome to</h3>\\n      <strong>Pitt <span class=\\\"special-letter\\\"> Well </span></strong>\\n      <h5 class=\\\"hint\\\">A comprehension well-being assessment system</h5>\\n    </label>\\n    <div class=\\\"login-group\\\">\\n      <div class=\\\"auth-source select\\\">\\n        <select id=\\\"login-auth-source-1\\\" formControlName=\\\"loginRole\\\">\\n          <option>Student</option>\\n          <option>Staff</option>\\n          <option>Faculty</option>\\n        </select>\\n      </div>\\n      <input class=\\\"username\\\" type=\\\"text\\\" id=\\\"login_username\\\" placeholder=\\\"Username\\\" formControlName=\\\"loginName\\\">\\n      <input class=\\\"password\\\" type=\\\"password\\\" id=\\\"login_password\\\" placeholder=\\\"Password\\\" formControlName=\\\"loginPsd\\\">\\n      <!--<div class=\\\"checkbox\\\">-->\\n        <!--<input type=\\\"checkbox\\\" id=\\\"rememberme\\\">-->\\n        <!--<label for=\\\"rememberme\\\">-->\\n          <!--Remember me-->\\n        <!--</label>-->\\n      <!--</div>-->\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"invalidLogin\\\">\\n        <div class=\\\"alert-items\\\">\\n          <div class=\\\"alert-item static\\\">\\n            <div class=\\\"alert-icon-wrapper\\\">\\n              <clr-icon class=\\\"alert-icon\\\" shape=\\\"exclamation-circle\\\"></clr-icon>\\n            </div>\\n            <span class=\\\"alert-text\\\">\\n                    Username or password is incorrect.\\n                </span>\\n          </div>\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\" [disabled]=\\\"loginForm.invalid\\\">Log In</button>\\n      <a routerLink=\\\"\\\" class=\\\"signup\\\" (click)=\\\"signUp()\\\">Sign up</a>\\n      <a routerLink=\\\"\\\" class=\\\"signup\\\" (click)=\\\"openForget()\\\">Forget Password</a>\\n      <app-forget-psd [basic]=\\\"forget\\\"></app-forget-psd>\\n      <div *ngIf=\\\"isValid\\\">\\n        Invalid user name or password\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n<!-- Register Page-->\\n<clr-wizard #wizardlg [(clrWizardOpen)]=\\\"lgOpen\\\" clrWizardSize=\\\"lg\\\">\\n  <clr-wizard-title>User Registration</clr-wizard-title>\\n\\n  <clr-wizard-button [type]=\\\"'cancel'\\\">Cancel</clr-wizard-button>\\n  <clr-wizard-button [type]=\\\"'previous'\\\">Back</clr-wizard-button>\\n  <clr-wizard-button [type]=\\\"'next'\\\">Next</clr-wizard-button>\\n  <clr-wizard-button [type]=\\\"'finish'\\\" (click)=\\\"register()\\\">Finish</clr-wizard-button>\\n\\n  <!--<clr-wizard-page [clrWizardPageNextDisabled]=\\\"!form1.valid\\\">-->\\n  <clr-wizard-page [clrWizardPageNextDisabled]=\\\"form1.invalid\\\">\\n    <ng-template clrPageTitle>Step 1</ng-template>\\n    <form [formGroup]=\\\"form1\\\">\\n    <section class=\\\"form-block\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"empUserName\\\">User name</label>\\n        <label for=\\\"empUserName\\\"\\n               aria-haspopup=\\\"true\\\"\\n               role=\\\"tooltip\\\"\\n               class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n          <input type=\\\"text\\\" id=\\\"empUserName\\\" placeholder=\\\"Enter Email As Username\\\"\\n                 name=\\\"username\\\" formControlName=\\\"username\\\" required>\\n          <span class=\\\"tooltip-content\\\"> User Name is Required. </span>\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n      <label for=\\\"empFirstName\\\">First name</label>\\n      <label for=\\\"empFirstName\\\"\\n             aria-haspopup=\\\"true\\\"\\n             role=\\\"tooltip\\\"\\n             class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n        <input type=\\\"text\\\" id=\\\"empFirstName\\\" placeholder=\\\"Enter First Name\\\"\\n               name=\\\"firstname\\\" formControlName=\\\"firstname\\\" required>\\n        <span class=\\\"tooltip-content\\\"> First Name is Required. </span>\\n      </label>\\n    </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"empLastName\\\">Last name</label>\\n        <label for=\\\"empLastName\\\"\\n               aria-haspopup=\\\"true\\\"\\n               role=\\\"tooltip\\\"\\n               class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n          <input type=\\\"text\\\" id=\\\"empLastName\\\" placeholder=\\\"Enter Last Name\\\"\\n                 name=\\\"lastname\\\"\\n                 formControlName=\\\"lastname\\\">\\n          <span class=\\\"tooltip-content\\\">\\n                    Last Name is Required.\\n                </span>\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"psd\\\">Password</label>\\n        <label for=\\\"psd\\\"\\n               aria-haspopup=\\\"true\\\"\\n               role=\\\"tooltip\\\"\\n               class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n          <input id=\\\"psd\\\" placeholder=\\\"Enter Password\\\"\\n                 name=\\\"psd\\\"\\n                 type=\\\"password\\\"\\n                 formControlName=\\\"psd\\\" required>\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"repsd\\\">Confirm Password</label>\\n        <label for=\\\"repsd\\\"\\n               aria-haspopup=\\\"true\\\"\\n               role=\\\"tooltip\\\"\\n               class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n          <input id=\\\"repsd\\\" placeholder=\\\"Reenter Password\\\"\\n                 name=\\\"repsd\\\"\\n                 type=\\\"password\\\"\\n                 formControlName=\\\"repsd\\\" required>\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"dateControl\\\">Date of Birth</label>\\n        <input id=\\\"dateControl\\\" type=\\\"date\\\" clrDate formControlName=\\\"dob\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"empType\\\">User type</label>\\n        <div class=\\\"select\\\">\\n          <select id=\\\"empType\\\"\\n                  name=\\\"role\\\"\\n                  formControlName=\\\"role\\\" required>\\n            <option value=\\\"Default\\\">Select User Type...</option>\\n            <option *ngFor=\\\"let type of userType\\\" [value]=\\\"type.value\\\">{{type.value}}</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n      <label for=\\\"empGender\\\">Gender</label>\\n      <div class=\\\"select\\\">\\n        <select id=\\\"empGender\\\"\\n                name=\\\"employeeGender\\\" formControlName=\\\"gender\\\" required>\\n          <option value=\\\"Default\\\">Select User Gender...</option>\\n          <option *ngFor=\\\"let ge of gender\\\" [value]=\\\"ge.value\\\">{{ge.value}}</option>\\n        </select>\\n      </div>\\n    </div>\\n      <br>\\n    </section>\\n    </form>\\n  </clr-wizard-page>\\n\\n  <clr-wizard-page [clrWizardPageNextDisabled]=\\\"form2.invalid\\\">\\n    <form [formGroup]=\\\"form2\\\">\\n    <section class=\\\"form-block\\\">\\n    <ng-template clrPageTitle>Step 2</ng-template>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"phone\\\">Phone</label>\\n      <input id=\\\"phone\\\" type=\\\"text\\\" formControlName=\\\"phone\\\" placeholder=\\\"Enter Phone Number\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"empRace\\\">Race</label>\\n      <div class=\\\"select\\\">\\n        <select id=\\\"empRace\\\"\\n                name=\\\"race\\\" formControlName=\\\"race\\\" required>\\n          <option value=\\\"Default\\\">Select User Race...</option>\\n          <option *ngFor=\\\"let race of races\\\" [value]=\\\"race.value\\\">{{race.viewValue}}</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n           <div class=\\\"form-group\\\">\\n        <label for=\\\"empMarital\\\">Marital Status</label>\\n        <div class=\\\"select\\\">\\n          <select id=\\\"empMarital\\\"\\n                  name=\\\"marital\\\" formControlName=\\\"marital\\\" required>\\n            <option value=\\\"Default\\\">Select User Marital Status...</option>\\n            <option *ngFor=\\\"let mar of maritals\\\" [value]=\\\"mar.value\\\">{{mar.viewValue}}</option>\\n          </select>\\n        </div>\\n      </div>\\n    </section>\\n    </form>\\n  </clr-wizard-page>\\n\\n  <!-- Security Questions-->\\n  <clr-wizard-page [clrWizardPageNextDisabled]=\\\"form3.invalid\\\">\\n    <ng-template clrPageTitle>Step 3</ng-template>\\n    <form [formGroup]=\\\"form3\\\">\\n      <section class=\\\"form-block\\\">\\n        <div *ngFor=\\\"let t of time\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>{{t.id}} .Security Question</label>\\n          <div class=\\\"select\\\">\\n            <select name=\\\"secq1\\\"\\n                    [(ngModel)]=\\\"t.question\\\" [formControlName]=\\\"t.qid\\\" required>\\n              <option *ngFor=\\\"let ques of secureQue\\\" [value]=\\\"ques.value\\\">{{ques.value}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>&nbsp; &nbsp; Security Answer</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"t.answer\\\" [formControlName]=\\\"t.aid\\\" placeholder=\\\"Enter Answer\\\" size=\\\"38\\\">\\n        </div>\\n        </div>\\n      </section>\\n    </form>\\n  </clr-wizard-page>\\n  <clr-wizard-page [clrWizardPageNextDisabled]=\\\"form1.invalid || form2.invalid || form3.invalid\\\">\\n    <ng-template clrPageTitle>Confirmation</ng-template>\\n    <ul class=\\\"list\\\">\\n      <li><label>User Name: </label><span class=\\\"confirm-info\\\"> {{ form1.get('username').value }}</span></li>\\n      <li><label>First Name: </label><span class=\\\"confirm-info\\\"> {{ form1.get('firstname').value }}</span></li>\\n      <li><label>Last Name: </label><span class=\\\"confirm-info\\\"> {{ form1.get('lastname').value }}</span></li>\\n      <li><label>Role: </label><span class=\\\"confirm-info\\\"> {{ form1.get('role').value }}</span></li>\\n      <li><label>Gender: </label><span class=\\\"confirm-info\\\"> {{ form1.get('gender').value }}</span></li>\\n      <li><label>Date of birth: </label><span class=\\\"confirm-info\\\"> {{ form1.get('dob').value | date:\\\"MM/dd/yy\\\"}}</span></li>\\n      <li><label>Phone: </label><span class=\\\"confirm-info\\\"> {{ form2.get('phone').value }}</span></li>\\n      <li><label>Race: </label><span class=\\\"confirm-info\\\"> {{ form2.get('race').value }}</span></li>\\n      <li><label>Marital Status: </label><span class=\\\"confirm-info\\\"> {{ form2.get('marital').value }}</span></li>\\n\\n      <div *ngFor=\\\"let t of time\\\">\\n        <li><label>Security Question {{t.id}}: </label><span class=\\\"confirm-info\\\"> {{t.question}}</span></li>\\n        <li><label>Security Answer {{t.id}}: </label><span class=\\\"confirm-info\\\"> {{t.answer}}</span></li>\\n      </div>\\n    </ul>\\n  </clr-wizard-page>\\n</clr-wizard>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ClrWizard} from '@clr/angular';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Gender, Marital, Race, SecurityQues, UserModel, UserType} from '../mock-data/userInfo';\nimport {UserService} from '../service/user.service';\nimport {StateService} from '../service/state.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isValid: boolean = false;\n  lgOpen: boolean = false;\n  role: string;\n  forget: boolean = false;\n  invalidLogin: boolean = false;\n\n  form1: FormGroup;\n  form2: FormGroup;\n  form3: FormGroup;\n  loginForm: FormGroup;\n\n  user = new UserModel();\n  registered: boolean = false;\n  userType = UserType;\n  gender = Gender;\n  races = Race;\n  maritals = Marital;\n\n  secureQue = SecurityQues;\n  time = [\n    {id: 1, qid: 'Q1', aid: 'A1', question: '', answer: ''},\n    {id: 2, qid: 'Q2', aid: 'A2', question: '', answer: ''},\n    {id: 3, qid: 'Q3', aid: 'A3', question: '', answer: ''},\n  ];\n\n  @ViewChild(\"wizardlg\") wizardLarge: ClrWizard;\n\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private userService: UserService,\n    private stateService: StateService,\n    ) { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.stateService.token$.next(\"\");\n    });\n    this.loginForm = this.fb.group({\n      loginRole: ['', [Validators.required]],\n      loginName: ['', Validators.required],\n      loginPsd: ['', Validators.required]\n    });\n    this.form1 = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(4)]],\n      firstname: ['', []],\n      lastname: ['', []],\n      psd: ['', [Validators.required, Validators.minLength(6)]],\n      repsd: ['', [Validators.required, Validators.minLength(6)]],\n      role: ['', [Validators.required]],\n      gender: ['', [Validators.required]],\n      dob: ['', [Validators.required]],\n    });\n    this.form2 = this.fb.group({\n      phone: ['', []],\n      race: ['', Validators.required],\n      marital: ['', Validators.required],\n    });\n    this.form3 = this.fb.group({\n      Q1: ['', [Validators.required]],\n      Q2: ['', [Validators.required]],\n      Q3: ['', [Validators.required]],\n      A1: ['', [Validators.required]],\n      A2: ['', [Validators.required]],\n      A3: ['', [Validators.required]],\n    });\n    localStorage.clear();\n  }\n\n  submit() {\n    const loginInfo = {\n      username: this.loginForm.controls['loginName'].value,\n      password: this.loginForm.controls['loginPsd'].value,\n      role: this.loginForm.controls['loginRole'].value,\n    };\n    this.userService.loginCheck(loginInfo).subscribe(value => {\n      if (value && value.status != false) {\n        this.stateService.token$.next(value.accessToken);\n        //console.log(value);\n        const curUser = {\n          id: value.id,\n          username: this.loginForm.controls['loginName'].value,\n          role: this.loginForm.controls['loginRole'].value,\n          token: value.accessToken,\n        };\n        localStorage.setItem(\"curUser\", JSON.stringify(curUser));\n        this.router.navigateByUrl(\"/dashboard\");\n      } else {\n        this.invalidLogin = true;\n      }\n    });\n\n    // const curUser = {\n    //   id: 1,\n    //   username: this.loginForm.controls['loginName'].value,\n    //   role: this.loginForm.controls['loginRole'].value\n    // };\n    // localStorage.setItem(\"curUser\", JSON.stringify(curUser));\n    // this.router.navigateByUrl(\"/dashboard\");\n  }\n\n  signUp() {\n    this.lgOpen = true;\n  }\n\n  openForget() {\n    this.forget = true;\n  }\n\n  register() {\n    const newUser = new UserModel({\n      userName: this.form1.controls['username'].value,\n      email: this.form1.controls['username'].value,\n      firstName: this.form1.controls['firstname'].value,\n      lastName: this.form1.controls['lastname'].value,\n      password: this.form1.controls['psd'].value,\n      userType: this.form1.controls['role'].value,\n      gender: this.form1.controls['gender'].value,\n      birthDate: this.form1.controls['dob'].value,\n      phone: this.form2.controls['phone'].value,\n      race: this.form2.controls['race'].value,\n      maritial: this.form2.controls['marital'].value,\n      security: this.form3.value,\n    });\n    this.userService.addUser(newUser).subscribe(value => {\n      console.log(value);\n      if (this.role !== undefined) {\n        localStorage.setItem(\"curRole\", this.role);\n      }\n      // this.router.navigateByUrl(\"/dashboard\");\n    });\n    this.registered = true;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport {RouterModule} from '@angular/router';\nimport {ClarityModule} from '@clr/angular';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ForgetPsdModule} from './forget-psd/forget-psd.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ForgetPsdModule,\n    RouterModule.forChild([\n      {path: '', component: LoginComponent}\n    ])\n  ],\n  declarations: [LoginComponent],\n  exports: [\n    LoginComponent,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ForgetPsdModule,\n    ClarityModule\n  ]\n})\nexport class LoginModule { }\n"],"sourceRoot":""}