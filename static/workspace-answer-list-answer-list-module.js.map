{"version":3,"sources":["webpack:///./src/app/layout/workspace/answer-list/answer-list.component.css","webpack:///./src/app/layout/workspace/answer-list/answer-list.component.html","webpack:///./src/app/layout/workspace/answer-list/answer-list.component.ts","webpack:///./src/app/layout/workspace/answer-list/answer-list.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+BAA+B,qBAAqB,sBAAsB,oBAAoB,GAAG,gCAAgC,oBAAoB,GAAG,uBAAuB,iBAAiB,GAAG,aAAa,kBAAkB,kBAAkB,GAAG,mBAAmB,gBAAgB,mBAAmB,uBAAuB,GAAG,wBAAwB,wBAAwB,GAAG,cAAc,yBAAyB,GAAG,O;;;;;;;;;;;ACApa,iUAAiU,6RAA6R,aAAa,+wBAA+wB,yBAAyB,iDAAiD,yBAAyB,0EAA0E,0BAA0B,iDAAiD,0BAA0B,iDAAiD,yBAAyB,2jBAA2jB,0BAA0B,KAAK,yBAAyB,2BAA2B,uBAAuB,4Z;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz0E;AACU;AACM;AASlE;IAQE,6BACU,YAA0B,EAC1B,eAAgC;QADhC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAN1C,gBAAW,GAAG,IAAI,WAAW,EAAE,CAAC;QAChC,uBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAC9C,qBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;IAKtC,CAAC;IAEL,sCAAQ,GAAR;QAAA,iBAQC;QAPC,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAC1D,KAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,eAAK;gBACtE,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IArBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAUwB,mEAAY;YACT,yEAAe;OAV/B,mBAAmB,CAuB/B;IAAD,0BAAC;CAAA;AAvB+B;AA0BhC;IAAA;IAIA,CAAC;IAHC,6BAAO,GAAP,UAAQ,IAAmB,EAAE,MAAc;QACzC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAAA,CAAC;IACJ,kBAAC;AAAD,CAAC;AAED;IAAA;IAIA,CAAC;IAHC,oCAAO,GAAP,UAAQ,CAAgB,EAAE,CAAgB;QACxC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IAC3B,CAAC;IACH,yBAAC;AAAD,CAAC;AAED;IAAA;IAIA,CAAC;IAHC,kCAAO,GAAP,UAAQ,CAAgB,EAAE,CAAgB;QACxC,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IAC7B,CAAC;IACH,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDwC;AACM;AACe;AACjB;AACF;AAC8B;AAoBzE;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAlB5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAa;gBACb,sFAAkB;gBAClB,4DAAY,CAAC,QAAQ,CAAC;oBACpB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAmB,EAAC;iBAC3C,CAAC;aACH;YACD,YAAY,EAAE,CAAC,0EAAmB,CAAC;YACnC,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY;gBACZ,0DAAa;gBACb,sFAAkB;gBAClB,0EAAmB;aACpB;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ","file":"workspace-answer-list-answer-list-module.js","sourcesContent":["module.exports = \".card-title {\\n  margin-top: 10px;\\n  margin-left: 10px;\\n  font-size: 20px;\\n}\\n\\n\\n.btn .btn-link .nav-link {\\n  font-size: 16px;\\n}\\n\\n\\n.main-container {\\n  height: 100%;\\n}\\n\\n\\n.card {\\n  width: 1130px;\\n  height: 600px;\\n}\\n\\n\\n.card-block {\\n  height: 80%;\\n  overflow: auto;\\n  margin-bottom: 1px;\\n}\\n\\n\\n.card .card-text {\\n  margin-bottom: 10px;\\n}\\n\\n\\n.radio {\\n  padding-bottom: 10px;\\n}\\n\\n\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"row\\\">\\n    <app-complete-card></app-complete-card>\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-xs-12\\\">\\n      <div class=\\\"card top-card\\\">\\n        <div class=\\\"card-title\\\">\\n          <clr-icon shape=\\\"view-list\\\" size=\\\"36\\\"></clr-icon> &nbsp;\\n          <span>Answer List</span>\\n        </div>\\n        <div class=\\\"card-divider\\\"></div>\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"card-text\\\">\\n            <!--Answer table -->\\n            <div class=\\\"row\\\">\\n              <clr-datagrid style=\\\"width: 95%; height: 90%; padding-left:15px\\\">\\n                <clr-dg-column style=\\\"width: 490px\\\" [clrDgField]=\\\"'label'\\\">Description\\n                  <clr-dg-string-filter [clrDgStringFilter]=\\\"labelFilter\\\"></clr-dg-string-filter>\\n                </clr-dg-column>\\n                <clr-dg-column [clrDgSortBy]=\\\"questionComparator\\\" [clrDgField]=\\\"'order'\\\">Order</clr-dg-column>\\n                <clr-dg-column style=\\\"width: 160px\\\" [clrDgField]=\\\"'domain'\\\">Domain</clr-dg-column>\\n                <clr-dg-column [clrDgSortBy]=\\\"weightComparator\\\" [clrDgField]=\\\"'weight'\\\">Weight</clr-dg-column>\\n                <clr-dg-column [clrDgField]=\\\"'type'\\\">Answer</clr-dg-column>\\n\\n                <clr-dg-row *ngFor=\\\"let ans of answers\\\">\\n                  <clr-dg-cell style=\\\"width: 490px\\\">{{ans.questionnaire.label}}</clr-dg-cell>\\n                  <clr-dg-cell>{{ans.questionnaire.order}}</clr-dg-cell>\\n\\n                  <clr-dg-cell style=\\\"width: 160px\\\">{{ans.questionnaire.domain}}</clr-dg-cell>\\n                  <clr-dg-cell>{{ans.questionnaire.weight}}</clr-dg-cell>\\n                  <clr-dg-cell>{{ans.answer.answer.value}}</clr-dg-cell>\\n\\n                  <!--<clr-dg-action-overflow>-->\\n                    <!--<button class=\\\"action-item\\\" (click)=\\\"onEdit(ques.id)\\\">Check</button>-->\\n                    <!--<button class=\\\"action-item\\\" (click)=\\\"onDelete(ques.id)\\\">Delete</button>-->\\n                  <!--</clr-dg-action-overflow>-->\\n                </clr-dg-row>\\n\\n                <clr-dg-footer>\\n                  <!--TODO: check again when more than 10 questions are added -->\\n                  <clr-dg-pagination #pagination [clrDgPageSize]=\\\"10\\\">\\n                    {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\\n                    of {{pagination.totalItems}} questions\\n                  </clr-dg-pagination>\\n                </clr-dg-footer>\\n              </clr-datagrid>\\n            </div>\\n            <!-- end of the answer table-->\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button class=\\\"btn btn-primary\\\" routerLink=\\\"/dashboard/session-list\\\">Back</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {StateService} from '../../../service/state.service';\nimport {QuestionService} from '../../../service/question.service';\nimport {ClrDatagridComparatorInterface, ClrDatagridStringFilterInterface} from '@clr/angular';\nimport {Questionnaire} from '../../../mock-data/Question';\n\n@Component({\n  selector: 'app-answer-list',\n  templateUrl: './answer-list.component.html',\n  styleUrls: ['./answer-list.component.css']\n})\nexport class AnswerListComponent implements OnInit {\n\n  sessionId: number;\n  answers: any;\n  labelFilter = new LabelFilter();\n  questionComparator = new QuestionComparator();\n  weightComparator = new WeightComparator();\n\n  constructor(\n    private stateService: StateService,\n    private questionService: QuestionService,\n  ) { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.sessionId = this.stateService.curSession$.getValue();\n      this.questionService.getAnswersBySession(this.sessionId).subscribe(value => {\n        this.answers = value;\n        console.log(this.answers);\n      })\n    })\n  }\n\n}\n\n\nclass LabelFilter implements ClrDatagridStringFilterInterface<Questionnaire> {\n  accepts(item: Questionnaire, search: string): boolean {\n    return item.label.toLowerCase().indexOf(search) >= 0;\n  };\n}\n\nclass QuestionComparator implements ClrDatagridComparatorInterface<Questionnaire> {\n  compare(a: Questionnaire, b: Questionnaire) {\n    return a.order - b.order;\n  }\n}\n\nclass WeightComparator implements ClrDatagridComparatorInterface<Questionnaire> {\n  compare(a: Questionnaire, b: Questionnaire) {\n    return a.weight - b.weight;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnswerListComponent } from './answer-list.component';\nimport {RouterModule} from '@angular/router';\nimport {ClarityModule} from '@clr/angular';\nimport {CompleteCardModule} from '../complete-card/complete-card.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    CompleteCardModule,\n    RouterModule.forChild([\n      {path: '', component: AnswerListComponent}\n    ])\n  ],\n  declarations: [AnswerListComponent],\n  exports: [\n    CommonModule,\n    RouterModule,\n    ClarityModule,\n    CompleteCardModule,\n    AnswerListComponent,\n  ]\n})\nexport class AnswerListModule { }\n"],"sourceRoot":""}