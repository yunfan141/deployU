{"version":3,"sources":["webpack:///./src/app/layout/workspace/dashboard/dashboard.component.css","webpack:///./src/app/layout/workspace/dashboard/dashboard.component.html","webpack:///./src/app/layout/workspace/dashboard/dashboard.component.ts","webpack:///./src/app/layout/workspace/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"workspace-dashboard-dashboard-module.js","sourcesContent":["module.exports = \".card-title {\\n  margin-top: 10px;\\n  margin-left: 10px;\\n  font-size: 20px;\\n}\\n\\n\\n.btn .btn-link .nav-link {\\n  font-size: 16px;\\n}\\n\\n\\n.main-container {\\n  height: 100%;\\n}\\n\\n\\n.card {\\n  width: 1130px;\\n  height: 600px;\\n}\\n\\n\\n.card-block {\\n  height: 80%;\\n  overflow: auto;\\n  margin-bottom: 1px;\\n}\\n\\n\\n.card .card-text {\\n  margin-bottom: 10px;\\n}\\n\\n\\n.radio {\\n  padding-bottom: 10px;\\n}\\n\\n\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"row\\\">\\n    <app-complete-card></app-complete-card>\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-xs-12\\\">\\n      <div class=\\\"card top-card\\\">\\n        <div class=\\\"card-title\\\">\\n          <clr-icon shape=\\\"home\\\" size=\\\"36\\\"></clr-icon> &nbsp;\\n          <span>Dashboard</span>\\n        </div>\\n        <div class=\\\"card-divider\\\"></div>\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"card-text\\\">\\n           <!-- general graph place-->\\n            <div class=\\\"row\\\">\\n              <!--time line chart -->\\n              <div class=\\\"col-md-7\\\" style=\\\"padding-left: 20px; padding-right: 25px\\\">\\n                <h4 style=\\\"padding-bottom: 15px\\\">Score change over time</h4>\\n                <canvas baseChart style=\\\"margin-top: 5px; height: 400px\\\"\\n                        [datasets]=\\\"lineChartData\\\"\\n                        [labels]=\\\"lineChartLabels\\\"\\n                        [chartType]=\\\"lineChartType\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n              </div>\\n\\n              <!--score list-->\\n              <div class=\\\"col-md-4\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <form [formGroup]=\\\"domainForm\\\">\\n                      <section class=\\\"form-block\\\">\\n                        <label style=\\\"font-size: 18px; color: darkblue; padding-bottom: 25px; margin-top: 20px\\\">Select Domains to check changes</label>\\n                        <div class=\\\"form-group\\\" style=\\\"padding-left: 20px\\\">\\n                          <label style=\\\"width: 3px\\\"></label>\\n                          <div class=\\\"radio\\\">\\n                            <input type=\\\"radio\\\" name=\\\"domain\\\" id=\\\"Overall\\\" formControlName=\\\"domain\\\" value=\\\"Overall\\\">\\n                            <label for=\\\"Overall\\\" style=\\\"font-size: 15px\\\">Overall</label>\\n                          </div>\\n                          <div class=\\\"radio\\\" *ngFor=\\\"let item of domains1\\\">\\n                            <input type=\\\"radio\\\" name=\\\"domain\\\" id=\\\"{{item.id}}\\\" formControlName=\\\"domain\\\" value=\\\"{{item.id}}\\\">\\n                            <label for=\\\"{{item.id}}\\\">{{item.domain}} </label>\\n                          </div>\\n                        </div>\\n                      </section>\\n                    </form>\\n                  </div>\\n              </div>\\n\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {DOMAINS} from '../../../mock-data/userInfo';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {QuestionService} from '../../../service/question.service';\nimport {Domain} from '../../../mock-data/Question';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  domains = DOMAINS;\n  domainForm: FormGroup;\n  selectedDomain: string = 'Overall';\n  userId = JSON.parse(localStorage.getItem('curUser')).id;\n  sessions : number[] = [];\n  scoreList = [[0,0,0,0,0,0,0], [0,0,0,0,0,0,0], [0,0,0,0,0,0,0], [0,0,0,0,0,0,0], [0,0,0,0,0,0,0], [0,0,0,0,0,0,0], [0,0,0,0,0,0,0]];\n  dateList = [];\n  dates = [];\n\n  domains1 = [];\n\n  // lineChart\n  lineChartData:Array<any> = [\n    {data: [0,0,0,0,0,0], label: 'Your score'}\n  ];\n  lineChartLabels:Array<any> = ['Section1', 'Section2', 'Section3', 'Section4', 'Section5', 'Section6', 'Section7'];\n  public lineChartType:string = 'line';\n\n  // events\n  public chartClicked(e:any):void {\n    console.log(e);\n  }\n\n  public chartHovered(e:any):void {\n    console.log(e);\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private questionService: QuestionService,\n    private   datePipe: DatePipe,\n  ) { }\n\n  ngOnInit() {\n    this.getDomains();\n    this.domainForm = this.fb.group({\n      domain: ['Overall']\n    });\n    this.domainForm.controls['domain'].valueChanges.subscribe(value => {\n      this.selectedDomain = value;\n      console.log(this.selectedDomain);\n      this.getNextdomain();\n    });\n    // this.getSession();\n    this.questionService.getSessionByUser(this.userId).subscribe(value => {\n      value.forEach( (item) => {\n        this.sessions.push(item.id);\n        this.dates.push(item.createDate);\n      })\n      console.log(\"session are\");\n      console.log(this.sessions);\n        for(let i = 0; i < this.sessions.length && i < 7; i++){\n              this.questionService.getScoreBySession(this.sessions[i]).subscribe( value => {\n                this.scoreList[6 - i] = value;\n                this.dateList[6 - i] = this.datePipe.transform(this.dates[i], \"yyyy-MM-dd\");\n              })\n        }\n        this.lineChartLabels = this.dateList;\n    })\n    // this.questionService.getScoreBySession(this.sessions[0]).subscribe( value => {\n    //   this.lineChartData[0].data = value;\n    // })\n    // this.questionService.getScoreBySession(this.sessions[0]).subscribe( value => {\n    //   this.lineChartData = new Array(1);\n    //   this.lineChartData[0] = {data: value.slice(), label: \"Your Score\"};\n    //   console.log(value);\n    //   console.log(this.lineChartData[0].data);\n    // })\n    // setTimeout(\n    //   () => {\n    //     let zeroA = [0,0,0,0,0,0,0];\n    //     this.scoreList = [];\n    //     for(let i = this.sessions.length - 1; (i >= this.sessions.length - 7) && i >= 0; i--){\n    //         this.questionService.getScoreBySession(this.sessions[i]).subscribe( value => {\n    //           this.scoreList.push(value);\n    //       })\n    //     }\n    //     if(this.sessions.length < 7){\n    //       for(let i = this.sessions.length - 1; i <= 7; i++){\n    //         this.scoreList.push(zeroA);\n    //       }\n    //     }\n    //     console.log(\"scorelist\");\n    //     console.log(this.scoreList);\n\n    //   }, 100\n    // )\n\n    setTimeout(() => {\n      let _lineChartData = new Array(this.lineChartData.length);\n      let score = [];\n      for(let i = 0; i < this.scoreList.length; i++){\n        let sum = 0;\n        for(let j = 0; j < 7; j++){\n          sum += Math.floor(this.scoreList[i][j] / 7);\n        }\n        score.push(sum);\n      }\n      console.log(score);\n      _lineChartData[0] =  {data: score.slice(), label: this.lineChartData[0].label};\n      this.lineChartData = _lineChartData;\n      console.log(this.lineChartLabels);\n    }, 700)\n  }\n\n  // getSession() {\n  //   this.questionService.getSessionByUser(this.userId).subscribe(value => {\n  //     value.forEach( (item) => {\n  //       this.sessions.push(item.id);\n  //     })\n  //     //console.log(value);\n  //   })\n  // }\n\n  getScore() {\n    // this.sessions.forEach( (id) => {\n\n    // })\n\n  }\n\n  getDomains() {\n    this.questionService.getAllDomains().subscribe(value => {\n      this.domains1 = value;\n    })\n  }\n\n  getNextdomain(){\n    let _lineChartData = new Array(this.lineChartData.length);\n    let score = []\n    if(this.selectedDomain !== \"Overall\"){\n        for(let i = 0; i < this.scoreList.length; i++){\n          score.push(this.scoreList[i][Number(this.selectedDomain) - 1]);\n        }\n    }\n    else{\n        for(let i = 0; i < this.scoreList.length; i++){\n          let sum = 0;\n          for(let j = 0; j < 7; j++){\n            sum += this.scoreList[i][j];\n          }\n          score.push(sum);\n        }\n    }\n    _lineChartData[0] =  {data: score.slice(), label: this.lineChartData[0].label};\n    this.lineChartData = _lineChartData;\n        // this.lineChartData[0].data = value.slice();\n        // let _lineChartData = new Array(this.lineChartData.length);\n        // _lineChartData[0] =  {data: value.slice(), label: this.lineChartData[0].label};\n        // this.lineChartData = _lineChartData;\n        // console.log(value);\n        // console.log(this.lineChartData);\n    }\n  }\n  // randomize() {\n  //   // let _lineChartData:Array<any> = new Array(this.lineChartData.length);\n  //   // for (let i = 0; i < this.lineChartData.length; i++) {\n  //   //   _lineChartData[i] = {data: new Array(this.lineChartData[i].data.length), label: this.lineChartData[i].label};\n  //   //   for (let j = 0; j < this.lineChartData[i].data.length; j++) {\n  //   //     _lineChartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\n  //   //   }\n  //   // }\n  // }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard.component';\nimport {ClarityModule} from '@clr/angular';\nimport {RouterModule} from '@angular/router';\nimport {ChartsModule} from 'ng2-charts';\nimport {CompleteCardModule} from '../complete-card/complete-card.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    ChartsModule,\n    CompleteCardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      {path: '', component: DashboardComponent}\n    ])\n  ],\n  declarations: [DashboardComponent],\n  exports: [\n    ClarityModule,\n    DashboardComponent,\n    ChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CompleteCardModule,\n    RouterModule\n  ]\n})\nexport class DashboardModule { }\n"],"sourceRoot":""}