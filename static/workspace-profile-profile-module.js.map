{"version":3,"sources":["webpack:///./src/app/layout/workspace/profile/profile.component.css","webpack:///./src/app/layout/workspace/profile/profile.component.html","webpack:///./src/app/layout/workspace/profile/profile.component.ts","webpack:///./src/app/layout/workspace/profile/profile.module.ts"],"names":[],"mappings":"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","file":"workspace-profile-profile-module.js","sourcesContent":["module.exports = \".card-title {\\n  margin-top: 10px;\\n  margin-left: 10px;\\n  font-size: 20px;\\n}\\n\\n\\n.btn .btn-link .nav-link {\\n  font-size: 16px;\\n}\\n\\n\\n.main-container {\\n  height: 100%;\\n}\\n\\n\\n.card {\\n  width: 1130px;\\n  height: 600px;\\n}\\n\\n\\n.card-block {\\n  height: 80%;\\n  overflow: auto;\\n  margin-bottom: 1px;\\n}\\n\\n\\n.card .card-text {\\n  margin-bottom: 10px;\\n}\\n\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"row\\\">\\n    <app-complete-card></app-complete-card>\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-xs-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-title\\\">\\n          <clr-icon shape=\\\"user\\\" size=\\\"36\\\"></clr-icon> &nbsp;\\n          <span>Profile</span>\\n        </div>\\n\\n        <div class=\\\"card-block\\\" style=\\\"margin-left: 10px\\\">\\n\\n          <clr-tabs>\\n            <clr-tab>\\n              <button clrTabLink id=\\\"link1\\\">Profile</button>\\n              <clr-tab-content id=\\\"content1\\\" *clrIfActive=\\\"true\\\">\\n                <div *ngIf=\\\"profileForm\\\">\\n                  <form [formGroup]=\\\"profileForm\\\">\\n                    <section class=\\\"form-block\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"empUserName\\\">User name</label>\\n                        <label for=\\\"empUserName\\\"\\n                               aria-haspopup=\\\"true\\\"\\n                               role=\\\"tooltip\\\"\\n                               class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n                          <input type=\\\"text\\\" id=\\\"empUserName\\\"\\n                                 name=\\\"username\\\" formControlName=\\\"username\\\" disabled>\\n                          <span class=\\\"tooltip-content\\\"> User Name is Required. </span>\\n                        </label>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"empFirstName\\\">First name</label>\\n                        <label for=\\\"empFirstName\\\"\\n                               aria-haspopup=\\\"true\\\"\\n                               role=\\\"tooltip\\\"\\n                               class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n                          <input type=\\\"text\\\" id=\\\"empFirstName\\\" placeholder=\\\"Enter First Name\\\"\\n                                 name=\\\"firstname\\\" formControlName=\\\"firstname\\\">\\n                          <span class=\\\"tooltip-content\\\"> First Name is Required. </span>\\n                        </label>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"empLastName\\\">Last name</label>\\n                        <label for=\\\"empLastName\\\"\\n                               aria-haspopup=\\\"true\\\"\\n                               role=\\\"tooltip\\\"\\n                               class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n                          <input type=\\\"text\\\" id=\\\"empLastName\\\" placeholder=\\\"Enter Last Name\\\"\\n                                 name=\\\"lastname\\\"\\n                                 formControlName=\\\"lastname\\\">\\n                        </label>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"dateControl\\\">Date of Birth</label>\\n                        <input id=\\\"dateControl\\\" type=\\\"date\\\" clrDate formControlName=\\\"dob\\\" required>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"empType\\\">User type</label>\\n                        <div class=\\\"select\\\">\\n                          <select id=\\\"empType\\\"\\n                                  name=\\\"role\\\"\\n                                  formControlName=\\\"role\\\" required>\\n                            <option *ngFor=\\\"let type of userType\\\" [value]=\\\"type.value\\\">{{type.value}}</option>\\n                          </select>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"empGender\\\">Gender</label>\\n                        <div class=\\\"select\\\">\\n                          <select id=\\\"empGender\\\"\\n                                  name=\\\"employeeGender\\\" formControlName=\\\"gender\\\" required>\\n                            <option *ngFor=\\\"let ge of gender\\\" [value]=\\\"ge.value\\\">{{ge.value}}</option>\\n                          </select>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"phone\\\">Phone</label>\\n                        <input id=\\\"phone\\\" type=\\\"text\\\" formControlName=\\\"phone\\\">\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"empMarital\\\">Marital Status</label>\\n                        <div class=\\\"select\\\">\\n                          <select id=\\\"empMarital\\\"\\n                                  name=\\\"marital\\\" formControlName=\\\"marital\\\" required>\\n                            <option *ngFor=\\\"let mar of maritals\\\" [value]=\\\"mar.value\\\">{{mar.viewValue}}</option>\\n                          </select>\\n                        </div>\\n                      </div>\\n\\n                      <form #form=\\\"ngForm\\\" novalidate>\\n                        <section class=\\\"form-block\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label>Change Password</label>\\n                            <clr-checkbox\\n                              name=\\\"termsCheckbox\\\"\\n                              id=\\\"checkrads_11\\\"\\n                              [(ngModel)]=\\\"changePassword\\\">\\n                              Click to change the password.\\n                            </clr-checkbox>\\n                          </div>\\n                        </section>\\n                      </form>\\n\\n                      <div *ngIf=\\\"changePassword\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"psd\\\">New Password</label>\\n                          <label for=\\\"psd\\\"\\n                                 aria-haspopup=\\\"true\\\"\\n                                 role=\\\"tooltip\\\"\\n                                 class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n                            <input type=\\\"text\\\" id=\\\"psd\\\" placeholder=\\\"Enter Password\\\"\\n                                   name=\\\"psd\\\"\\n                                   formControlName=\\\"psd\\\" required>\\n                          </label>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"repsd\\\">Confirm Password</label>\\n                          <label for=\\\"repsd\\\"\\n                                 aria-haspopup=\\\"true\\\"\\n                                 role=\\\"tooltip\\\"\\n                                 class=\\\"tooltip tooltip-validation tooltip-md\\\">\\n                            <input type=\\\"text\\\" id=\\\"repsd\\\" placeholder=\\\"Reenter Password\\\"\\n                                   name=\\\"repsd\\\"\\n                                   formControlName=\\\"repsd\\\" required>\\n                          </label>\\n                        </div>\\n                      </div>\\n                    </section>\\n                  </form>\\n                </div>\\n\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"submitProfile()\\\">Confirm Change</button>\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"goBack()\\\">Back</button>\\n              </clr-tab-content>\\n            </clr-tab>\\n\\n            <clr-tab>\\n              <button clrTabLink>Security Question</button>\\n              <clr-tab-content *clrIfActive>\\n                <form [formGroup]=\\\"securityForm\\\">\\n                  <section class=\\\"form-block\\\">\\n                    <div *ngFor=\\\"let t of time\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label>{{t.id}} .Security Question</label>\\n                        <div class=\\\"select\\\">\\n                          <select name=\\\"secq1\\\"\\n                                   [formControlName]=\\\"t.qid\\\" required>\\n                            <option *ngFor=\\\"let ques of secureQue\\\" [value]=\\\"ques.value\\\">{{ques.value}}</option>\\n                          </select>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label>&nbsp; &nbsp; Security Answer</label>\\n                        <input type=\\\"text\\\" [formControlName]=\\\"t.aid\\\" placeholder=\\\"Enter Answer\\\" size=\\\"38\\\">\\n                      </div>\\n                    </div>\\n                  </section>\\n                </form>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"submitSecurity()\\\">Confirm Change</button>\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"goBack()\\\">Back</button>\\n              </clr-tab-content>\\n            </clr-tab>\\n          </clr-tabs>\\n\\n\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Gender, Marital, Race, SecurityQues, USER1, UserType} from '../../../mock-data/userInfo';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../../service/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user = USER1;\n  userId = JSON.parse(localStorage.getItem('curUser')).id;\n\n  user1: any;\n  profileForm: FormGroup;\n  securityForm: FormGroup;\n  changePassword: boolean = false;\n\n  userType = UserType;\n  gender = Gender;\n  races = Race;\n  maritals = Marital;\n  secureQue = SecurityQues;\n  time = [\n    {id: 1, qid: 'Q1', aid: 'A1', question: '', answer: ''},\n    {id: 2, qid: 'Q2', aid: 'A2', question: '', answer: ''},\n    {id: 3, qid: 'Q3', aid: 'A3', question: '', answer: ''},\n  ];\n\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.getUserById();\n  }\n\n  getUserById() {\n    this.userService.getUserById(this.userId).subscribe(value => {\n      this.user1 = value;\n      this.profileForm = this.fb.group({\n        username: [this.user1.userName],\n        firstname: [this.user1.firstName],\n        lastname: [this.user1.lastName],\n        dob: [this.user1.birthDate],\n        role: [this.user1.userType],\n        gender: [this.user1.gender],\n        phone: [this.user1.phone],\n        marital: [this.user1.maritial],\n        psd: [this.user1.password],\n        repsd: [this.user1.password],\n      });\n      this.securityForm = this.fb.group({\n        Q1: [this.user1.security.Q1],\n        Q2: [this.user1.security.Q2],\n        Q3: [this.user1.security.Q3],\n        A1: [this.user1.security.A1],\n        A2: [this.user1.security.A2],\n        A3: [this.user1.security.A3],\n      });\n    })\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  submitProfile() {\n    this.userService.updateUser(this.userId, this.profileForm.value).subscribe(value => {\n      // console.log(value);\n    });\n  }\n\n  submitSecurity() {\n    this.userService.updateUser(this.userId, {security: this.securityForm.value}).subscribe(value => {\n      console.log(value);\n    });\n    console.log(this.securityForm.value);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileComponent } from './profile.component';\nimport {ClarityModule} from '@clr/angular';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {CompleteCardModule} from '../complete-card/complete-card.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CompleteCardModule,\n    RouterModule.forChild([\n      {path: '', component: ProfileComponent}\n    ])\n  ],\n  declarations: [ProfileComponent],\n  exports: [\n    ClarityModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    CompleteCardModule,\n    ProfileComponent\n  ]\n})\nexport class ProfileModule { }\n"],"sourceRoot":""}