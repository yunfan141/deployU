{"version":3,"sources":["webpack:///./src/app/layout/workspace/questionnaire/questionnaire.component.css","webpack:///./src/app/layout/workspace/questionnaire/questionnaire.component.html","webpack:///./src/app/layout/workspace/questionnaire/questionnaire.component.ts","webpack:///./src/app/layout/workspace/questionnaire/questionnaire.module.ts"],"names":[],"mappings":"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","file":"workspace-questionnaire-questionnaire-module.js","sourcesContent":["module.exports = \".card-title {\\n  margin-top: 10px;\\n  margin-left: 10px;\\n  font-size: 20px;\\n}\\n\\n\\n.btn .btn-link .nav-link {\\n  font-size: 16px;\\n}\\n\\n\\n.main-container {\\n  height: 100%;\\n}\\n\\n\\n.card {\\n  width: 1130px;\\n  height: 600px;\\n}\\n\\n\\n.card {\\n  width: 1130px;\\n  height: 600px;\\n}\\n\\n\\n.card-block {\\n  height: 80%;\\n  overflow: auto;\\n  margin-bottom: 15px;\\n}\\n\\n\\n.card .card-text {\\n  margin-bottom: 10px;\\n}\\n\\n\\n.card-footer {\\n  position: absolute;\\n  bottom: 10px;\\n}\\n\\n\\nclr-tab-content {\\n  overflow: auto;\\n}\\n\\n\\n.start-left {\\n  width: 40%;\\n  float: left;\\n  padding-left: 50px;\\n  padding-top: 50px;\\n}\\n\\n\\n.start-right {\\n  width: 40%;\\n  float: left;\\n  padding-top: 50px;\\n}\\n\\n\\n.picture {\\n  height:250px;\\n}\\n\\n\\nh6 {\\n\\n}\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\n  <div class=\\\"row\\\">\\n  <app-complete-card></app-complete-card>\\n    <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-xs-12\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-title\\\">\\n      <clr-icon shape=\\\"pencil\\\" size=\\\"36\\\"></clr-icon> &nbsp;\\n      <span>Questionnaire</span>\\n    </div>\\n    <div class=\\\"card-divider\\\"></div>\\n    <div class=\\\"card-block\\\">\\n      <div class=\\\"card-text\\\">\\n        <clr-tabs>\\n          <clr-tab>\\n            <button clrTabLink>Questionnaire</button>\\n            <clr-tab-content *clrIfActive>\\n              <div class=\\\"start-left\\\">\\n                <img src=\\\"../../../../assets/questionnaire.png\\\" class=\\\"picture\\\">\\n              </div>\\n              <div class=\\\"start-right\\\">\\n                <h3>This is a new session for questionnaire.</h3>\\n                <h6>Please choose a domain to start answer questions</h6>\\n                <h6>* Please remenber to submit your answer before you switch to another domain</h6>\\n              </div>\\n            </clr-tab-content>\\n          </clr-tab>\\n\\n          <clr-tab *ngFor=\\\"let dom of domains\\\">\\n            <button clrTabLink (click)=\\\"getQuestionsByDomain(dom.id)\\\">{{dom.domain}}</button>\\n            <clr-tab-content>\\n              <div *ngIf=\\\"form[dom.id]\\\" style=\\\"padding-top: 10px; padding-left: 10px\\\">\\n                <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form[dom.id]\\\">\\n                  <div *ngFor=\\\"let question of questions[dom.id]\\\" class=\\\"form-row\\\">\\n                    <app-question [question]=\\\"question\\\" [form]=\\\"form[dom.id]\\\"></app-question>\\n                  </div>\\n                </form>\\n                <div class=\\\"card-footer\\\">\\n                  <div *ngIf=\\\"!isSubmitted[dom.id]\\\">\\n                    <h6 style=\\\"color : #F94D32\\\">* Please remenber to submit your answer before you switch to another domain</h6>\\n                  </div>\\n                  <br>\\n                  <div *ngIf=\\\"isSubmitted[dom.id]\\\">\\n                    <p style=\\\"font-size: 14px; padding-bottom: 5px; color: #004a70;\\\">Your answer for current domain has been submitted successfully.</p>\\n                  </div>\\n                  <div class=\\\"btn-group btn-primary\\\" *ngIf=\\\"form[dom.id]\\\">\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form[dom.id].valid || isSubmitted[dom.id]\\\" (click)=\\\"submitAns(dom.id)\\\">Submit</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </clr-tab-content>\\n          </clr-tab>\\n        </clr-tabs>\\n      </div>\\n      <!-- <div class=\\\"card-footer\\\">\\n        <div *ngIf=\\\"isSubmitted\\\">\\n          <p style=\\\"font-size: 14px; padding-bottom: 5px; color: #004a70;\\\">Your answer for current domain has been submitted successfully.</p>\\n        </div>\\n        <div class=\\\"btn-group btn-primary\\\" *ngIf=\\\"form\\\">\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"submitAns()\\\">Submit</button>\\n          <button class=\\\"btn btn-success\\\">Reset</button>\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"getQuestionsByDomain(dom.id +1 )\\\">Next</button>\\n        </div>\\n      </div> -->\\n    </div>\\n  </div>\\n  </div>\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validator, Validators} from '@angular/forms';\nimport {AnswerItem, Question, Session} from '../../../mock-data/Question';\nimport {QuestionControlService} from '../../../service/question-control.service';\nimport {QuestionService} from '../../../service/question.service';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-questionnaire',\n  templateUrl: './questionnaire.component.html',\n  styleUrls: ['./questionnaire.component.css']\n})\nexport class QuestionnaireComponent implements OnInit {\n\n  userId = JSON.parse(localStorage.getItem('curUser')).id;\n  session: any;\n  domains = [];\n  questions = [];\n  answers = [];\n  form: FormGroup[];\n  // isSubmitted: boolean = false;\n  isSubmitted: boolean[] = [false,false,false,false,false,false,false];\n  payLoad = '';\n  questions2 = [];\n  answers2 = [];\n  form2 : FormGroup;\n  domainIdList = [1, 2, 3, 4, 5, 6, 7];\n\n  constructor(\n    private questionService: QuestionService,\n    private fb: FormBuilder,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit() {\n    this.getDomains();\n    this.createSession();\n    this.answers = new Array(7);\n    this.form = new Array(7);\n    this.questions = new Array(7);\n  }\n\n  createSession() {\n    let date = this.datePipe.transform(Date.now(), \"yyyy-MM-dd HH:mm a z':'+0900\");\n    const sessionInfo = new Session({\n      userId: this.userId,\n      createDate: date\n    });\n    this.questionService.createSession(sessionInfo).subscribe(value => {\n      this.session = value;\n      //console.log(this.session);\n    });\n  }\n\n  getDomains() {\n    this.questionService.getAllDomains().subscribe(value => {\n      this.domains = value;\n      if (this.domains.length > 0) {\n        this.getQuestionsByDomain(this.domains[0].id);\n      }\n    })\n  }\n\n  getQuestionsByDomain(id: number) {\n    //this.questions = [];\n    this.answers[id] = [];\n    this.questionService.getQuestionByDomain(id).subscribe(value => {\n      this.questions[id] = value;\n      console.log(this.questions[id]);\n      let group: any = {};\n      this.questions[id].forEach(ques => {\n        group[ques.id] = ['', Validators.required];\n        const answer = new AnswerItem({\n          questionId: ques.id,\n          domain: ques.domain,\n          weight: ques.weight,\n        });\n        this.answers[id].push(answer);\n        console.log(this.answers);\n      });\n      // generate form group to collect the users' answers\n      this.form[id] = this.fb.group(group);\n      this.answers[id].forEach(ans => {\n        this.form[id].controls[ans.questionId].valueChanges.subscribe(value => {\n          this.questions[id].forEach(item => {\n            if (item.id == ans.questionId) {\n              item.ansOptions.forEach(ansitem => {\n                if (ansitem.eid == value) {\n                  ans.answer = ansitem;\n                }\n              })\n            }\n          })\n        });\n      });\n    });\n  }\n\n\n  submitAns(id: number) {\n    // this.session.questionnaireAnswer = this.answers[id];\n    const finalAnswer = {\n      questionnaireAnswer: this.answers[id],\n    };\n    this.questionService.addQuestionAnswer(finalAnswer, this.session.id).subscribe(value => {\n      console.log(value);\n      this.isSubmitted[id] = true;\n      console.log(this.isSubmitted[id]);\n    });\n  }\n\n  onSubmit() {\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuestionnaireComponent } from './questionnaire.component';\nimport {ClarityModule} from '@clr/angular';\nimport {Router, RouterModule} from '@angular/router';\nimport {CompleteCardModule} from '../complete-card/complete-card.module';\nimport {QuestionModule} from './question/question.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    CompleteCardModule,\n    QuestionModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      {path: '', component: QuestionnaireComponent}\n    ])\n  ],\n  declarations: [QuestionnaireComponent],\n  exports: [\n    ClarityModule,\n    RouterModule,\n    CompleteCardModule,\n    QuestionModule,\n    FormsModule,\n    ReactiveFormsModule,\n    QuestionnaireComponent\n  ]\n})\nexport class QuestionnaireModule { }\n"],"sourceRoot":""}